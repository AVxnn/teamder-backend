require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
import paymentService from '../services/paymentService';

const token = process.env.BOT_TOKEN;
const webAppUrl = process.env.WEBAPP_URL;

export const bot = new TelegramBot(token, { polling: true });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
bot.on('successful_payment', async (msg: any) => {
  try {
    const { invoice_payload, telegram_payment_charge_id } = msg.successful_payment;
    await paymentService.handleSuccessfulPayment(invoice_payload, telegram_payment_charge_id);
    await bot.sendMessage(msg.chat.id, '‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ó–≤–µ–∑–¥—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á–µ—Ç.');
  } catch (error) {
    console.error('Error handling successful payment:', error);
    await bot.sendMessage(msg.chat.id, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
  }
});

export function startBot() {
  bot.onText(/\/start/, (msg: any) => {
    const chatId = msg.chat.id;
  
    bot.sendMessage(
      chatId,
      "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–µ–±–µ —Ç–∏–º–º–µ–π—Ç–æ–≤ –∫–ª–∏–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
      {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "–û—Ç–∫—Ä—ã—Ç—å TeamDer",
                web_app: { url: webAppUrl },
              },
            ],
          ],
        },
      }
    );
  });
  
  console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
}